{"version":3,"sources":["images/blank.png","images/blue-candy.png","images/red-candy.png","images/green-candy.png","images/orange-candy.png","images/purple-candy.png","images/yellow-candy.png","Components/Scoreboard.js","App.js","index.js"],"names":["ScoreBoard","score","className","candyColors","blueCandy","redCandy","greenCandy","orangeCandy","purpleCandy","yellowCandy","App","useState","currColorGrid","setCurrColorGrid","sqBeingDragged","setSqBeingDragged","sqBeingReplaced","setSqBeingReplaced","scoreDisplay","setScoreDisplay","checkForColumnOfFour","useCallback","i","colOfFour","width","chosenColor","isBlank","blank","every","sq","forEach","sq2","console","log","prev","checkForColumnOfThree","colOfThree","checkForRowOfThree","rowOfThree","includes","checkForRowOfFour","rowOfFour","MoveIntoSquareBelow","Math","floor","random","length","useEffect","randomColorArrangement","randomColor","push","createBoard","timer","setInterval","clearInterval","dragStart","e","target","dragDrop","dragEnd","sqBeingDraggedId","parseInt","getAttribute","sqBeingReplacedId","isValidMove","isCol4","isRow4","isCol3","isRow3","map","candyColor","idx","src","alt","data-id","draggable","onDragOver","preventDefault","onDragEnter","onDragLeave","onDragStart","onDragEnd","onDrop","Scoreboard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,MAA0B,kCCA1B,MAA0B,uCCA1B,MAA0B,sCCA1B,MAA0B,wCCA1B,MAA0B,yCCA1B,MAA0B,yCCA1B,MAA0B,yC,OCQ1BA,EARI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACI,qBAAKC,UAAU,cAAf,SACI,yCAAYD,QCQlBE,EAAc,CAChBC,EACAC,EACAC,EACAC,EACAC,EACAC,GA2LWC,MAtLf,WAAgB,IAAD,EAC+BC,mBAAS,IADxC,mBACJC,EADI,KACWC,EADX,OAEiCF,mBAAS,MAF1C,mBAEJG,EAFI,KAEYC,EAFZ,OAGmCJ,mBAAS,MAH5C,mBAGJK,EAHI,KAGaC,EAHb,OAI6BN,mBAAS,GAJtC,mBAIJO,EAJI,KAIUC,EAJV,KAMLC,EAAuBC,uBAAY,WACrC,IAD4C,IAAD,WAClCC,GACL,IAAMC,EAAY,CAACD,EAAGA,EApBpB,EAoB+BA,EAAIE,GAAWF,EAAIE,IAC9CC,EAAcb,EAAcU,GAC5BI,EAAUd,EAAcU,KAAOK,EAErC,GAAIJ,EAAUK,OAAM,SAAAC,GAAE,OAAIjB,EAAciB,KAAQJ,IAAgBC,KAK5D,OAHAH,EAAUO,SAAQ,SAAAC,GAAG,OAAInB,EAAcmB,GAAOJ,KAC9CK,QAAQC,IAAI,iCACZd,GAAgB,SAAAe,GAAI,OAAIA,EAAO,KACzB,CAAN,GAAO,IAVNZ,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAAC,IAAD,IAArBA,GAAqB,qCAa/B,CAACV,IAEEuB,EAAwBd,uBAAY,WACtC,IAD6C,IAAD,WACnCC,GACL,IAAMc,EAAa,CAACd,EAAGA,EApCrB,EAoCgCA,EAAIE,IAChCC,EAAcb,EAAcU,GAC5BI,EAAUd,EAAcU,KAAOK,EAGrC,GAAIS,EAAWR,OAAM,SAAAC,GAAE,OAAIjB,EAAciB,KAAQJ,IAAgBC,KAK7D,OAHAU,EAAWN,SAAQ,SAAAC,GAAG,OAAInB,EAAcmB,GAAOJ,KAE/CR,GAAgB,SAAAe,GAAI,OAAIA,EAAO,KACzB,CAAN,GAAO,IAXNZ,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAAC,IAAD,IAArBA,GAAqB,qCAc/B,CAACV,IAEEyB,EAAqBhB,uBAAY,WACnC,IAD0C,IAAD,WAChCC,GACL,IAAMgB,EAAa,CAAChB,EAAGA,EAAI,EAAGA,EAAI,GAC5BG,EAAcb,EAAcU,GAE5BI,EAAUd,EAAcU,KAAOK,EAErC,MAHiB,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAG/DY,SAASjB,GAAI,WAEtBgB,EAAWV,OAAM,SAAAC,GAAE,OAAIjB,EAAciB,KAAQJ,IAAgBC,MAE7DY,EAAWR,SAAQ,SAAAC,GAAG,OAAInB,EAAcmB,GAAOJ,KAC/CK,QAAQC,IAAI,iCACZd,GAAgB,SAAAe,GAAI,OAAIA,EAAO,KACzB,CAAN,GAAO,SALX,GARKZ,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAAC,IAAD,IAApBA,GAAoB,qDAgB9B,CAACV,IAEE4B,EAAoBnB,uBAAY,WAClC,IADyC,IAAD,WAC/BC,GACL,IAAMmB,EAAY,CAACnB,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,GAClCG,EAAcb,EAAcU,GAE5BI,EAAUd,EAAcU,KAAOK,EACrC,MAFiB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE9FY,SAASjB,GAAI,WAEtBmB,EAAUb,OAAM,SAAAC,GAAE,OAAIjB,EAAciB,KAAQJ,IAAgBC,MAE5De,EAAUX,SAAQ,SAAAC,GAAG,OAAInB,EAAcmB,GAAOJ,KAC9CK,QAAQC,IAAI,iCACZd,GAAgB,SAAAe,GAAI,OAAIA,EAAO,KACzB,CAAN,GAAO,SALX,GAPKZ,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAAC,IAAD,IAApBA,GAAoB,qDAe9B,CAACV,IAEE8B,EAAsBrB,uBAAY,WACpC,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IAAK,CACT,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACJiB,SAASjB,IAEnBV,EAAcU,KAAOK,IACnCf,EAAcU,GAAKnB,EAAYwC,KAAKC,MAAMD,KAAKE,SAAW1C,EAAY2C,UAGtElC,EAAcU,EAjGhB,KAiG+BK,IAC7Bf,EAAcU,EAlGhB,GAkG6BV,EAAcU,GACzCV,EAAcU,GAAKK,MAG5B,CAACf,IAWJmC,qBAAU,YATU,WAEhB,IADA,IAAMC,EAAyB,GACtB1B,EAAI,EAAGA,EAAIE,GAAeF,IAAK,CACpC,IAAM2B,EAAc9C,EAAYwC,KAAKC,MAAMD,KAAKE,SAAW1C,EAAY2C,SACvEE,EAAuBE,KAAKD,GAEhCpC,EAAiBmC,GAIjBG,KACF,IAEFJ,qBAAU,WACN,IAAMK,EAAQC,aAAY,WACtBjC,IACAoB,IACAL,IACAE,IACAK,IACA7B,EAAiB,YAAID,MACtB,KAEH,OAAO,kBAAM0C,cAAcF,MAC7B,CAACjB,EAAuBvB,EAAeQ,EAAsBoB,EAAmBH,EAAoBK,IAEtG,IAAMa,EAAY,SAACC,GACjBxB,QAAQC,IAAI,QAAQuB,EAAEC,QACpB1C,EAAkByC,EAAEC,SAElBC,EAAW,SAACF,GACdxB,QAAQC,IAAI,MAAOuB,EAAEC,QACrBxC,EAAmBuC,EAAEC,SAEnBE,EAAU,WACZ,IAAMC,EAAmBC,SAAS/C,EAAegD,aAAa,YACxDC,EAAoBF,SAAS7C,EAAgB8C,aAAa,YAEhElD,EAAcmD,GAAqBjD,EAAegD,aAAa,OAC/DlD,EAAcgD,GAAoB5C,EAAgB8C,aAAa,OAE/D,IAMME,EANa,CACfJ,EAAkB,EAClBA,EAnJE,EAoJFA,EAAkB,EAClBA,EArJE,GAuJyBrB,SAASwB,GAClCE,EAAS7C,IACT8C,EAAS1B,IACT2B,EAAShC,IACTiC,EAAS/B,IAEX0B,GAAqBC,IAAgBC,GAAUC,GAAUC,GAAUC,IACnErD,EAAkB,MAClBE,EAAmB,QAEnBL,EAAcmD,GAAqB/C,EAAgB8C,aAAa,OAChElD,EAAcgD,GAAoB9C,EAAegD,aAAa,OAC9DjD,EAAiB,YAAID,MAI/B,OACE,sBAAKV,UAAU,MAAf,UACI,qBAAKA,UAAU,OAAf,SAEIU,EAAcyD,KAAI,SAACC,EAAYC,GAAb,OACd,qBAEIC,IAAKF,EAELG,IAAKH,EACLI,UAASH,EACTI,WAAW,EACXC,WAAY,SAACpB,GAAD,OAAMA,EAAEqB,kBACpBC,YAAa,SAACtB,GAAD,OAAMA,EAAEqB,kBACrBE,YAAa,SAACvB,GAAD,OAAMA,EAAEqB,kBACrBG,YAAazB,EACb0B,UAAWtB,EACXuB,OAAQxB,GAXHa,QAgBjB,cAACY,EAAD,CAAYlF,MAAOiB,QClM3BkE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.64b829b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blank.fbcb9179.png\";","export default __webpack_public_path__ + \"static/media/blue-candy.73120c15.png\";","export default __webpack_public_path__ + \"static/media/red-candy.3658b37c.png\";","export default __webpack_public_path__ + \"static/media/green-candy.599f7016.png\";","export default __webpack_public_path__ + \"static/media/orange-candy.f106b2cd.png\";","export default __webpack_public_path__ + \"static/media/purple-candy.ae25b8a5.png\";","export default __webpack_public_path__ + \"static/media/yellow-candy.a3d87a9b.png\";","const ScoreBoard = ({ score }) => {\n    return (\n        <div className=\"score-board\">\n            <h2>Score: {score}</h2>\n        </div>\n    )\n}\n\nexport default ScoreBoard","import {useCallback, useEffect, useState} from \"react\";\nimport blank from './images/blank.png';\nimport blueCandy from './images/blue-candy.png';\nimport redCandy from './images/red-candy.png';\nimport greenCandy from './images/green-candy.png';\nimport orangeCandy from './images/orange-candy.png';\nimport purpleCandy from './images/purple-candy.png';\nimport yellowCandy from './images/yellow-candy.png';\nimport Scoreboard from \"./Components/Scoreboard\";\n\nconst width = 8;\nconst candyColors = [\n    blueCandy,\n    redCandy,\n    greenCandy,\n    orangeCandy,\n    purpleCandy,\n    yellowCandy\n];\n\n\n\nfunction App() {\n    const [currColorGrid, setCurrColorGrid] = useState([])\n    const [sqBeingDragged, setSqBeingDragged] = useState(null)\n    const [sqBeingReplaced, setSqBeingReplaced] = useState(null)\n    const [scoreDisplay, setScoreDisplay] = useState(0)\n\n    const checkForColumnOfFour = useCallback(() => {\n        for (let i = 0; i <= 39; i++) {\n            const colOfFour = [i, i + width, i + width * 2, i + width * 3];\n            const chosenColor = currColorGrid[i];\n            const isBlank = currColorGrid[i] === blank\n\n            if (colOfFour.every(sq => currColorGrid[sq] === chosenColor && !isBlank)) {\n                // all items are same\n                colOfFour.forEach(sq2 => currColorGrid[sq2] = blank);\n                console.log(\"Found 4 col and deleted match\");\n                setScoreDisplay(prev => prev + 4);\n                return true;\n            }\n        }\n    }, [currColorGrid])\n\n    const checkForColumnOfThree = useCallback(() => {\n        for (let i = 0; i <= 47; i++) {\n            const colOfThree = [i, i + width, i + width * 2];\n            const chosenColor = currColorGrid[i];\n            const isBlank = currColorGrid[i] === blank\n\n\n            if (colOfThree.every(sq => currColorGrid[sq] === chosenColor && !isBlank)) {\n                // all items are same\n                colOfThree.forEach(sq2 => currColorGrid[sq2] = blank);\n                // console.log(\"Found 3 col and deleted match\");\n                setScoreDisplay(prev => prev + 3);\n                return true;\n            }\n        }\n    }, [currColorGrid])\n\n    const checkForRowOfThree = useCallback(() => {\n        for (let i = 0; i < 64; i++) {\n            const rowOfThree = [i, i + 1, i + 2];\n            const chosenColor = currColorGrid[i];\n            const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64];\n            const isBlank = currColorGrid[i] === blank;\n\n            if (notValid.includes(i)) continue;\n\n            if (rowOfThree.every(sq => currColorGrid[sq] === chosenColor && !isBlank)){\n                // all items are same\n                rowOfThree.forEach(sq2 => currColorGrid[sq2] = blank);\n                console.log(\"Found 3 row and deleted match\");\n                setScoreDisplay(prev => prev + 3);\n                return true;\n            }\n        }\n    }, [currColorGrid])\n\n    const checkForRowOfFour = useCallback(() => {\n        for (let i = 0; i < 64; i++) {\n            const rowOfFour = [i, i + 1, i + 2, i + 3];\n            const chosenColor = currColorGrid[i];\n            const notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64];\n            const isBlank = currColorGrid[i] === blank;\n            if (notValid.includes(i)) continue;\n\n            if (rowOfFour.every(sq => currColorGrid[sq] === chosenColor && !isBlank)) {\n                // all items are same\n                rowOfFour.forEach(sq2 => currColorGrid[sq2] = blank);\n                console.log(\"Found 3 row and deleted match\");\n                setScoreDisplay(prev => prev + 3);\n                return true;\n            }\n        }\n    }, [currColorGrid])\n\n    const MoveIntoSquareBelow = useCallback(() => {\n        for (let i = 0; i <= 55; i++) {\n            const firstRow = [0,1,2,3,4,5,6,7]\n            const isFirstRow = firstRow.includes(i)\n\n            if (isFirstRow && currColorGrid[i] === blank) {\n                currColorGrid[i] = candyColors[Math.floor(Math.random() * candyColors.length)]\n            }\n\n            if (currColorGrid[i + width] === blank){\n                currColorGrid[i + width] = currColorGrid[i]\n                currColorGrid[i] = blank\n            }\n        }\n    }, [currColorGrid])\n\n    const createBoard = () => {\n        const randomColorArrangement = [];\n        for (let i = 0; i < width * width; i++) {\n            const randomColor = candyColors[Math.floor(Math.random() * candyColors.length)];\n            randomColorArrangement.push(randomColor)\n        }\n        setCurrColorGrid(randomColorArrangement);\n    }\n\n    useEffect(()=>{\n        createBoard();\n    },[])\n\n    useEffect(()=>{\n        const timer = setInterval(()=>{\n            checkForColumnOfFour()\n            checkForRowOfFour()\n            checkForColumnOfThree()\n            checkForRowOfThree()\n            MoveIntoSquareBelow()\n            setCurrColorGrid([...currColorGrid])\n        }, 200)\n\n        return () => clearInterval(timer)\n    },[checkForColumnOfThree, currColorGrid, checkForColumnOfFour, checkForRowOfFour, checkForRowOfThree, MoveIntoSquareBelow])\n\n    const dragStart = (e) => {\n      console.log(\"start\",e.target)\n        setSqBeingDragged(e.target);\n    }\n    const dragDrop = (e) => {\n        console.log(\"end\", e.target);\n        setSqBeingReplaced(e.target);\n    }\n    const dragEnd = () => {\n        const sqBeingDraggedId = parseInt(sqBeingDragged.getAttribute('data-id'));\n        const sqBeingReplacedId = parseInt(sqBeingReplaced.getAttribute('data-id'));\n\n        currColorGrid[sqBeingReplacedId] = sqBeingDragged.getAttribute('src');\n        currColorGrid[sqBeingDraggedId] = sqBeingReplaced.getAttribute('src');\n\n        const validMoves = [\n            sqBeingDraggedId -1,\n            sqBeingDraggedId - width,\n            sqBeingDraggedId +1,\n            sqBeingDraggedId + width,\n        ]\n        const isValidMove = validMoves.includes(sqBeingReplacedId)\n        const isCol4 = checkForColumnOfFour();\n        const isRow4 = checkForRowOfFour();\n        const isCol3 = checkForColumnOfThree();\n        const isRow3 = checkForRowOfThree();\n\n        if (sqBeingReplacedId && isValidMove && (isCol4 || isRow4 || isCol3 || isRow3)) {\n            setSqBeingDragged(null);\n            setSqBeingReplaced(null);\n        } else {\n            currColorGrid[sqBeingReplacedId] = sqBeingReplaced.getAttribute('src');\n            currColorGrid[sqBeingDraggedId] = sqBeingDragged.getAttribute('src');\n            setCurrColorGrid([...currColorGrid])\n        }\n    }\n\n  return (\n    <div className=\"app\">\n        <div className='game'>\n        {\n            currColorGrid.map((candyColor, idx)=>(\n                <img\n                    key={idx}\n                    src={candyColor}\n                    // style={{ backgroundColor: candyColor }}\n                    alt={candyColor}\n                    data-id={idx}\n                    draggable={true}\n                    onDragOver={(e)=> e.preventDefault()}\n                    onDragEnter={(e)=> e.preventDefault()}\n                    onDragLeave={(e)=> e.preventDefault()}\n                    onDragStart={dragStart}\n                    onDragEnd={dragEnd}\n                    onDrop={dragDrop}\n                />\n            ))\n        }\n        </div>\n        <Scoreboard score={scoreDisplay} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}